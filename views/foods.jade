extends ./layouts/layout

block content
  .p-4
    .flex.items-center.justify-between.my-5
      h1.uppercase.text-2xl.font-medium Foods
      if success 
        p.text-green-500.uppercase.font-medium.text-sm= success
      else if error 
        p.text-red-500.uppercase.font-medium.text-sm= error
    form(enctype='multipart/form-data' method="POST" action="/foods/add_food" class="md:justify-between justify-start").flex.flex-wrap.items-center.gap-5.p-5.bg-white.rounded.shadow
      input(type='file' accept="image/jpg, image/png, image/jpeg" name="photo" required).input.input-bordered.p-1
      select(name="type" required).select.select-bordered.w-full.max-w-xs
        option(disabled='disabled' selected='selected') Choose food type
        - var types = ["drinks", 'fastfood']
        each val in types
          option= val
      input(type='text' name="name" placeholder="Enter food name" required).input.input-bordered
      input(type='number' name="price" placeholder="Enter food price" required).input.input-bordered
      button.btn.btn-primary Add
      //- form(enctype='multipart/form-data' method="POST" action="/foods/add_food" class="w-1/2").flex.flex-col.gap-5.p-5.bg-white.rounded
      //-   input(type='file' accept="image/jpg, image/png, image/jpeg" name="photo" required).input.input-bordered.p-1
      //-   input(type='text' name="name" placeholder="Enter food name" required).input.input-bordered
      //-   input(type='number' name="price" placeholder="Enter food price" required).input.input-bordered
      //-   button.btn.btn-primary Add
    .grid.grid-cols-5.gap-5.my-5
      if foods.length !== 0
        each food in foods
          .bg-white.rounded.overflow-hidden.shadow
            img(src='#{food.photo}', alt='food').w-64.h-40.object-cover.object-center
            .p-4 
              .flex.items-end.justify-between.mb-3
                h1.text-xl.font-medium=food.name
                p.text-sm=food.price+' sum'
              .flex.items-end.justify-between
                form(action="/foods/published_food?_method=PUT&id=#{food._id}&published=#{!food.published}", method="post")
                    if food.published 
                      button(type="submit").btn.btn-outline.btn-sm.btn-primary UnPublished
                    else
                      button(type="submit").btn.btn-outline.btn-sm.btn-primary Published
                form(action="/foods/delete_food?_method=DELETE&id=#{food._id}", method="post")
                  button(type="submit").btn.btn-outline.btn-sm.btn-error Delete
      else 
        h1.col-span-5.text-center.uppercase Foods empty




